<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAICAAAAEAIACoEAAAFgAAACgAAAAgAAAAQAAAAAEAIAAAAAAAABAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAANuWEgDblhIA25YSANuWEgDblhIA2pYSANqW
        EgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADXlxAA3JYSANyWEgDblhIA25YSANuW
        EgDblhIA25YSAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA2pUTANuWEgDalhIA25YSANqWEgDblhIA25YSHNuW
        EojblhKR25YSd9uWEgrblhIA3pcVANuWEgDblhIA25YSANuXFAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAANeXEADblhIA25YSANqVEwHalhMC25YSANuW
        EgDblhJJ25YSqduWElHblhK025YSJNuWEgDblhIA2pYSBNqXFADblhIA25YTANuXFQAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA2pYSANuWEgDalhID25YSbduW
        EovblhIb3JYSANuWEnPblhJx25YSANuWEpbblhJL3JYSANuWEi3blhKc25YSWdqUDwDblhMA25cTAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADalhIA2pcSAtuW
        EmjblhKi25YSfduWEqrblhKR25YSs9uWEj3blhIA25YSXtuWErHblhKS25YSrNuWEnHblhKs25YSVdyV
        EQDblxMAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAANuW
        EgDblhIF25YSnNuWEmvblhIA25YSPtuWEmPblhId2ZUSAduWEgDalhID25YSKduWEmrblhIs3pYTANuW
        Eo/blhJ+3ZQPANuXEwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAA2pcSANuWEgDblhIq25YSrNuWEi/blhIA25YSANuWEgDblhIM25YSGNuWEgnblhIA25YSANuW
        EgDblhJM25YSpNuWEhXblhIA25YTAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAA25YRANuWEgDblhIA25YSANyWEgDblhKU25YSYNuWEgDblhIE25YSWduWEqLblhKm25YSoNuW
        EkzalhMB25YSANuWEn/blhJ125YSANuWEgDblhIA25YSANaXEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAADblhEA25YSANuWEg/blhIu25YSW9uWErPblhIg25YSANuWElvblhKl25YSNNuW
        EhbblhI825YSq9uWEkrblhIA25YSNduWErTblhJa25YSNduWEhDblhIA1pcQAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAANuWEgDblhIA25YSfduWErLblhKL25YST9uWEgHblhIN25YSpduW
        EjPblhIA25YSANuWEgDblhJC25YSm9uWEgbblhIH25YSVduWEoPblhK225YSb9uWEgDWlxAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA25YSANuWEgDblhKR25YST9uWEgDblhIA25YSANuW
        EhzblhKm25YSEtuWEgDalhIA25YSANuWEh3blhKl25YSENuWEgDblhIA25YSANuWEmPblhKA3JYSANaX
        EAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADblhIA25YSANuWEoTblhKu25YSfduW
        EkTXmBMA25YSDduWEqPblhI025YSANuWEgDblhIA25YSRduWEpvblhIG25YSBtuWEl3blhKM25YSt9uW
        Em3clhIA1pcQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAANuWEgDblhIA25YSFtuW
        Ej3blhJp25YSsduWEhvblhIA25YSVtuWEqbblhI625YSGtuWEkPblhKs25YSRtuWEgDblhI025YStduW
        ElLblhIu25YSDtuWEwDXlxAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA25YSANuW
        EgDblhIA25YSANyWEgDblhKU25YSXtuWEgDalhED25YSU9uWEp/blhKn25YSnNuWEkfWlhAB25YSANuW
        EnzblhJ925YSANuWEgDblhIA25YSANuWEgDblhIA25YSANuWEgDclhIA2pYSANqWEgAAAAAAAAAAAAAA
        AAAAAAAAAAAAANuWEgDblhIA25YSJNuWEqvblhIz25YSANuWEgDblhIA25YSCNuWEhTalhIH25YSANuW
        EgDblhIA25YSQNuWEqnblhIb2pYRAtuWEibblhIR25YSANuWEgbblhIq25YSC9uWEgDclhIA25YSAAAA
        AAAAAAAAAAAAAAAAAAAAAAAA2pYSANqWEQTblhKV25YSc9yWEgDblhI825YSbtuWEijalhID25YSANuW
        EgTblhIv25YSdtuWEjrblhIA25YShduWEpnblhKN25YSvduWEoDclhQA25YSStuWEsHblhKj25YSMduW
        EgDblhIAAAAAAAAAAAAAAAAAAAAAAAAAAADalhEA2ZYRAduWEmXblhKj25YSe9uWEqrblhKG25YSs9uW
        Ek3blhIA25YSWduWErPblhKE25YSqtuWEn3blhKq25YSa9uWErHblhJA25YSo9uWEpPblhKz25YSR9uW
        EqTblhJF25YSANuWEgDblhIA25YSAAAAAAAAAAAAAAAAANqWEgDblhIA25YQAduWEmTblhKQ25YSH9uW
        EgDblhJh25YSf9uWEgDblhKN25YSUtuWEgDblhIg25YSn9uWEmnalhIR25YSrduWEjjblhIk25YSWNuW
        Ej/blhIT25YSsNuWEjfblhIO25YSGNqVEwHalRIA25cUAAAAAAAAAAAA25YRANuWEQDblhIA2pYQAdqW
        EQLblhIA25YSANuWEjvblhKz25YSXtuWErbblhIr25YSANqXEgHblhKJ25YSsNuWEqzblhKS25YSEduW
        EgfblhId25YSD9qWEgLblhJp25YStduWEqjblhKv25YSHduWEgDalhIAAAAAAAAAAAAAAAAA25YRANuW
        EgDblhIA2pYSANuWEgDblhIA25YSE9uWEnnblhKI25YSc9uWEg3blhIA25YSJduWErzblhJA25YSOduW
        EhHblhIq25YSntuWEqfblhKn25YSVtuWEgbblhIx25YSK9uWEqbblhJh25YSANqWEgAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAANuWEgDblhIA25cRANuXEQDblxEA25YSANuWEgDblhIU25YSiNuW
        EqLblhIl25YSB9uWEqDblhJi25YSDduWEi/blhKr25YSMtqWEgXblhKB25YSotuWEjHblhIA2pYSAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA2ZYSANmWEgDalRMA2pUTANqVEwDblhQA25YSANuW
        EgDilhcA25YSlNuWElnblhIf25YSqtuWEg7blhIA25YSANuWEnrblhJj25YSG9uWErLblhIa25YSANyW
        EgDalhIAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AADblhIA25YSBNuWEkXblhKy25YSP9uWEhLblhKr25YSLtuWEgDalhIJ25YSmtuWEkrblhIR25YSqduW
        EnTblhIS25YSANqXEgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAANuWEgDblhIl25YSwduWEkrblhIP25gUAduWEljblhKs25YSetuWEprblhKO25YSC9uW
        EgvblhIj25YSrtuWEmbblhIA2pcSAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAA25YSANuWEgrblhKh25YSoduWEq7blhJi2pYSBduWEjPblhJh25YSSdqW
        EgvblhIy25YSqtuWEpvblhK525YSNNuWEgDdmhkAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADblxIA25YSANuWEjLblhJM25YSPNuWErTblhI02pYSBduW
        EhvblhIR2pYSCduWEqXblhJi25YSPduWEkzblhIG25YSANiSDwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAANqVEwDblhIA25YSANuWEgDblhIM25YSp9uW
        Ei3blhJ925YSs9uWEqvblhIm25YSmduWEkDblhIA25YSANuWEgDblhIAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA25gWANqVDwDakgoA25YSANuW
        EhfblhKw25YSptuWEqXblhIc25YSbtuWErDblhK625YSTduWEgDdlRMAzZkNAM2aDQAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AADblhIA25USAduWEh3blhJh25YSNduWEgDblhIQ25YSZNuWEjXblhIG25YSAPeNIwAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAANuWEgDblRIA25YSANuWEgDblhIA25YSANuWEgDblhIA25YSANqWEgDblhIAnqkAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAANeXEADblhIA25YRANuWEgDblhIA2pYTANqWEwDalhMA4JsIAAAA
        AAAAAAAAAAAAAAAAAAAAAAAA/wH///4B///gAA//wAAH/8AAB//AAAf/wAAH/8AAB/8AAAH/AAAB/wAA
        Af8AAAH/AAAB/wAAAf8AAAAHwAAAB8AAAAfAAAABwAAAAMAAAADgAAAA/wAAAP8AAAD//AAA//wAAP/8
        AAD//AAA//wAAf/8AAH//4AH//+AB///wB8=
</value>
  </data>
</root>